plugins {
    id 'io.freefair.git-version'
    id 'io.freefair.maven-central.validate-poms' apply false
    id 'io.freefair.lombok' apply false
    id "com.gradle.plugin-publish" version "1.3.1" apply false
    id "io.github.gradle-nexus.publish-plugin" version "2.0.0"
    id 'org.jetbrains.kotlin.jvm' apply false
}

nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = "7e6204597a774f"
            nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
        }
    }
}

allprojects {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }

    group = "io.freefair.gradle"
    version = rootProject.version

    plugins.withId("java") {

        java {
            withSourcesJar()
            withJavadocJar()
            toolchain {
                languageVersion = JavaLanguageVersion.of(17)
            }
        }

        plugins.apply "jacoco"
        plugins.apply "io.freefair.lombok"
        plugins.apply "io.freefair.javadoc-links"

        jacocoTestReport.reports.xml.required = true

        tasks.withType(Test) {
            useJUnitPlatform()
            jvmArgs('--add-opens=java.base/java.lang=ALL-UNNAMED')
        }

        dependencies {
            testImplementation platform("org.junit:junit-bom:5.13.4")

            testImplementation 'org.assertj:assertj-core:3.27.3'
            testImplementation 'org.junit.jupiter:junit-jupiter-api'
            testImplementation 'org.junit.jupiter:junit-jupiter-params'
            testImplementation 'org.mockito:mockito-core:5.18.0'
            testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
            testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        }

        tasks.named('jar') {
            manifest {
                attributes 'Implementation-Version': "$project.version"
            }
        }
    }

    tasks.withType(Javadoc).configureEach {
        options.links "https://docs.gradle.org/$gradle.gradleVersion/javadoc/"
        options.addBooleanOption("Xdoclint:-missing", true)
    }

    plugins.withId("com.gradle.plugin-publish") {
        gradlePlugin {
            website = "https://docs.freefair.io/gradle-plugins/$version/reference/"
            vcsUrl = 'https://github.com/freefair/gradle-plugins'
        }
    }

    plugins.withId("maven-publish") {
        project.apply plugin: 'signing'
        project.apply plugin: 'io.freefair.maven-central.validate-poms'

        signing {
            required = { !version.endsWith('SNAPSHOT') && gradle.taskGraph.hasTask("publish") }

            def signingKey = findProperty("signingKey")
            def signingPassword = findProperty("signingPassword")
            useInMemoryPgpKeys(signingKey, signingPassword)
        }

        publishing {
            publications.withType(MavenPublication) {
                pom {
                    url = 'https://github.com/freefair/gradle-plugins'
                    name = provider { project.description }
                    description = provider { project.description }
                    inceptionYear = '2016'
                    licenses {
                        license {
                            name = 'MIT'
                            url = 'https://github.com/freefair/gradle-plugins/blob/master/LICENSE'
                        }
                    }
                    organization {
                        name = 'FreeFair'
                        url = 'https://github.com/freefair'
                    }
                    developers {
                        developer {
                            id = 'larsgrefer'
                            name = 'Lars Grefer'
                            email = 'github@larsgrefer.de'
                            timezone = 'Europe/Berlin'
                        }
                        developer {
                            id = 'frisch12'
                            name = 'Dennis Fricke'
                            email = 'dennis.fricke@freefair.io'
                            timezone = 'Europe/Berlin'
                        }
                    }
                    ciManagement {
                        system = 'GitHub Actions'
                        url = 'https://github.com/freefair/gradle-plugins/actions'
                    }
                    issueManagement {
                        system = 'GitHub Issues'
                        url = 'https://github.com/freefair/gradle-plugins/issues'
                    }
                    scm {
                        connection = 'scm:git:https://github.com/freefair/gradle-plugins.git'
                        developerConnection = 'scm:git:git@github.com:freefair/gradle-plugins.git'
                        url = 'https://github.com/freefair/gradle-plugins/'
                    }
                }
            }
        }
    }
}

tasks.named('wrapper') {
    distributionType = Wrapper.DistributionType.ALL
}
